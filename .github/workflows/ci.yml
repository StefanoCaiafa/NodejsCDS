name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key
          DB_PATH: ':memory:'

      - name: Check build artifacts
        run: ls -la dist/

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t codigodelsur-backend:latest .

      - name: Test Docker image
        run: |
          docker run -d -p 8000:8000 --name test-container codigodelsur-backend:latest
          sleep 30
          curl -f http://localhost:8000/health || exit 1
          docker stop test-container
          docker rm test-container
